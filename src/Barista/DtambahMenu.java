package Barista;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;

/**
 *
 * @author yan
 */
public class DtambahMenu extends javax.swing.JDialog {

    Gudang induk;
    DefaultTableModel model;

    private boolean isEdit = false;
    private int indexRow = -1;

    public DtambahMenu(Gudang parent, boolean modal) {
        super(parent, modal);
        this.induk = parent;

        initComponents();

        model = induk.getModelTable();
    }

    public void setFormData(String namaBahan, int jumlah, String satuan, String kadaluarsa, int rowIndex) {
        tf_bahan.setText(namaBahan);
        tf_jumlah.setText(String.valueOf(jumlah));
        tf_satuan.setText(satuan);
        tf_kadaluarsa.setText(kadaluarsa);

        this.indexRow = rowIndex;
        isEdit = true;

    }

    public String generateId_bahanBaru(Connection conn) {
        String prefix = "BhN";
        String sql = "SELECT id_bahan FROM bahan_gudang ORDER BY id_bahan DESC LIMIT 1";
        String id_baru = "";

        try {
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                String id_lama = rs.getString("id_bahan");
                String angka = id_lama.substring(3);
                int nomor = Integer.parseInt(angka);
                id_baru = String.format("%s%03d", prefix, nomor + 1);

            } else {
                id_baru = prefix + "001";
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return id_baru;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tf_bahan = new javax.swing.JTextField();
        tf_jumlah = new javax.swing.JTextField();
        tf_satuan = new javax.swing.JTextField();
        tf_kadaluarsa = new javax.swing.JTextField();
        btn_tambah = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 66, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Tambah Bahan");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Menu Gudang");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel2))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(139, 69, 19));

        tf_bahan.setBackground(new java.awt.Color(255, 255, 255));
        tf_bahan.setForeground(new java.awt.Color(0, 0, 0));
        tf_bahan.setText("Nama Bahan");
        tf_bahan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_bahanFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_bahanFocusLost(evt);
            }
        });

        tf_jumlah.setBackground(new java.awt.Color(255, 255, 255));
        tf_jumlah.setForeground(new java.awt.Color(0, 0, 0));
        tf_jumlah.setText("Jumlah");
        tf_jumlah.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_jumlahFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_jumlahFocusLost(evt);
            }
        });

        tf_satuan.setBackground(new java.awt.Color(255, 255, 255));
        tf_satuan.setForeground(new java.awt.Color(0, 0, 0));
        tf_satuan.setText("Satuan");
        tf_satuan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_satuanFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_satuanFocusLost(evt);
            }
        });

        tf_kadaluarsa.setBackground(new java.awt.Color(255, 255, 255));
        tf_kadaluarsa.setForeground(new java.awt.Color(0, 0, 0));
        tf_kadaluarsa.setText("Kadaluarsa ( Format = 2025-12-12 )");
        tf_kadaluarsa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_kadaluarsaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_kadaluarsaFocusLost(evt);
            }
        });

        btn_tambah.setBackground(new java.awt.Color(0, 0, 0));
        btn_tambah.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_tambah.setForeground(new java.awt.Color(255, 255, 255));
        btn_tambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add_35dp.png"))); // NOI18N
        btn_tambah.setText("Tambah");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_kadaluarsa, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addComponent(tf_satuan, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addComponent(tf_jumlah, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addComponent(tf_bahan)
                    .addComponent(btn_tambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(tf_bahan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_kadaluarsa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_bahanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_bahanFocusGained
        // TODO add your handling code here:
        if (tf_bahan.getText().equalsIgnoreCase("nama bahan")) {
            tf_bahan.setText("");
        }
    }//GEN-LAST:event_tf_bahanFocusGained

    private void tf_bahanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_bahanFocusLost
        // TODO add your handling code here:
        if (tf_bahan.getText().equalsIgnoreCase("")) {
            tf_bahan.setText("nama bahan");
        }
    }//GEN-LAST:event_tf_bahanFocusLost

    private void tf_jumlahFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_jumlahFocusGained
        // TODO add your handling code here:
        if (tf_jumlah.getText().equalsIgnoreCase("jumlah")) {
            tf_jumlah.setText("");
        }
    }//GEN-LAST:event_tf_jumlahFocusGained

    private void tf_jumlahFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_jumlahFocusLost
        // TODO add your handling code here:
        if (tf_jumlah.getText().equalsIgnoreCase("")) {
            tf_jumlah.setText("jumlah");
        }
    }//GEN-LAST:event_tf_jumlahFocusLost

    private void tf_satuanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_satuanFocusGained
        // TODO add your handling code here:
        if (tf_satuan.getText().equalsIgnoreCase("satuan")) {
            tf_satuan.setText("");
        }
    }//GEN-LAST:event_tf_satuanFocusGained

    private void tf_satuanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_satuanFocusLost
        // TODO add your handling code here:
        if (tf_satuan.getText().equalsIgnoreCase("")) {
            tf_satuan.setText("satuan");
        }
    }//GEN-LAST:event_tf_satuanFocusLost

    private void tf_kadaluarsaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_kadaluarsaFocusGained
        // TODO add your handling code here:
        if (tf_kadaluarsa.getText().equalsIgnoreCase("Kadaluarsa ( Format = 2025-12-12 )")) {
            tf_kadaluarsa.setText("");
        }
    }//GEN-LAST:event_tf_kadaluarsaFocusGained

    private void tf_kadaluarsaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_kadaluarsaFocusLost
        // TODO add your handling code here:
        if (tf_kadaluarsa.getText().equalsIgnoreCase("")) {
            tf_kadaluarsa.setText("Kadaluarsa ( Format = 2025-12-12 )");
        }
    }//GEN-LAST:event_tf_kadaluarsaFocusLost

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        // TODO add your handling code here:
        String bahan = tf_bahan.getText();
        String jumlah = tf_jumlah.getText();
        String satuan = tf_satuan.getText();
        String kadaluarsa = tf_kadaluarsa.getText();

        String sqlTambah = "INSERT INTO bahan_gudang (id_bahan, nama_bahan, jumlah, satuan, kadaluarsa) VALUES (?, ?, ?, ?, ?)";

        // --- Validasi Input ---
        try {
            if (bahan.isEmpty() || satuan.isEmpty() || kadaluarsa.isEmpty() || jumlah.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi Form semua !!");
                return;
            }

            // Validasi Format Angka untuk Jumlah
            int jumlahCasting;
            try {
                jumlahCasting = Integer.parseInt(jumlah);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Jumlah harus angka valid !");
                return;
            }

            // Validasi Tanggal Kadaluarsa
            DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            try {
                LocalDate tanggalKadaluarsa = LocalDate.parse(kadaluarsa, format);
                if (tanggalKadaluarsa.isBefore(LocalDate.now())) {
                    JOptionPane.showMessageDialog(this, "Tanggal kadaluarsa sudah lewat !");
                    return;
                }
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(this, "Format tanggal kadaluarsa salah\nharus yyyy-MM-dd !");
                return;
            }

            // --- Tambah/Edit Data ---
            Connection conn = datacaffegui02.Koneksi.koneksiDb();
            if (isEdit && indexRow != -1) {
                // Logika Update (Sudah cukup baik, tidak perlu banyak perubahan)
                String id_bahan = model.getValueAt(indexRow, 0).toString();
                String editSql = "UPDATE bahan_gudang SET nama_bahan = ?, jumlah = ?, satuan = ?, kadaluarsa = ? WHERE id_bahan = ?";

                java.sql.PreparedStatement pstEdit = conn.prepareStatement(editSql);
                pstEdit.setString(1, bahan);
                pstEdit.setInt(2, jumlahCasting);
                pstEdit.setString(3, satuan);
                pstEdit.setString(4, kadaluarsa);
                pstEdit.setString(5, id_bahan);

                int rowAffected = pstEdit.executeUpdate();
                pstEdit.close();

                if (rowAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diperbarui.");
                    induk.tampil();
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal diperbarui. ID tidak ditemukan.");
                }

            } else {
                // Logika Insert (tambah data)
                // Cek duplikasi nama bahan
                String sqlCekBahan = "SELECT COUNT(*) FROM bahan_gudang WHERE nama_bahan = ?";
                PreparedStatement pstCek = conn.prepareStatement(sqlCekBahan);
                pstCek.setString(1, bahan);
                ResultSet rs = pstCek.executeQuery();
                rs.next();
                int count = rs.getInt(1);

                if (count > 0) {
                    JOptionPane.showMessageDialog(this, "Nama bahan sudah ada di database!");
                    return;
                }

                // INSERT kalo no double nama bahan
                PreparedStatement pst = conn.prepareStatement(sqlTambah);
                String ID_bahan = generateId_bahanBaru(conn);

                pst.setString(1, ID_bahan);
                pst.setString(2, bahan);
                pst.setInt(3, jumlahCasting);
                pst.setString(4, satuan);
                pst.setString(5, kadaluarsa);

                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Data bahan baru berhasil ditambahkan.");
                induk.tampil();
                dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error !");
            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_tambahActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_tambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField tf_bahan;
    private javax.swing.JTextField tf_jumlah;
    private javax.swing.JTextField tf_kadaluarsa;
    private javax.swing.JTextField tf_satuan;
    // End of variables declaration//GEN-END:variables
}
